name: Build easytrade on master
on:
  push:
    branches:
      - "main"
      - "master"
    paths:
      - .github/**
      - kubernetes-manifests/**
      - skaffold.yaml
      - src/**

env:
  DOCKERHUB_REPO: mattreindt/easytrade
  SKAFFOLD_DEFAULT_REPO: mattreindt/easytrade
  SKAFFOLD_VERSION: 2.13.2

jobs:
  build-easytrade:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send build start event to Dynatrace
        run: |
          curl -X POST "${{ secrets.DT_URL }}/api/v2/events/ingest" \
            -H "Authorization: Api-Token ${{ secrets.DT_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "eventType": "CUSTOM_INFO",
              "title": "Build Started",
              "entitySelector": "type(APPLICATION)",
              "properties": {
                "dt.event.source": "GitHub Actions",
                "dt.event.pipeline.name": "build-easytrade",
                "dt.event.pipeline.stage": "build",
                "dt.event.pipeline.status": "RUNNING",
                "commit": "'$GITHUB_SHA'",
                "branch": "'$GITHUB_REF_NAME'",
                "repository": "'$GITHUB_REPOSITORY'"
              }
            }'

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Set application version
        uses: ./.github/actions/set-version
        with:
          version: 1.2.${{ github.run_number }}

      - name: "Build easytrade and push it to Docker registry with commit tag"
        uses: hiberbee/github-action-skaffold@1.27.0
        with:
          command: build
          push: true
          skaffold-version: ${{ env.SKAFFOLD_VERSION }}
          default-repo: ${{ env.DOCKERHUB_REPO }}

      - name: "Build easytrade and push it to Docker registry with latest tag"
        uses: hiberbee/github-action-skaffold@1.27.0
        with:
          command: build
          tag: latest
          push: true
          skaffold-version: ${{ env.SKAFFOLD_VERSION }}
          default-repo: ${{ env.DOCKERHUB_REPO }}

      - name: Send build success event to Dynatrace
        if: success()
        run: |
          curl -X POST "${{ secrets.DT_URL }}/api/v2/events/ingest" \
            -H "Authorization: Api-Token ${{ secrets.DT_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "eventType": "CUSTOM_INFO",
              "title": "Build Completed Successfully",
              "entitySelector": "type(APPLICATION)",
              "properties": {
                "dt.event.source": "GitHub Actions",
                "dt.event.pipeline.name": "build-easytrade",
                "dt.event.pipeline.stage": "build",
                "dt.event.pipeline.status": "SUCCESS",
                "commit": "'$GITHUB_SHA'",
                "branch": "'$GITHUB_REF_NAME'",
                "repository": "'$GITHUB_REPOSITORY'"
              }
            }'

      - name: Send build failure event to Dynatrace
        if: failure()
        run: |
          curl -X POST "${{ secrets.DT_URL }}/api/v2/events/ingest" \
            -H "Authorization: Api-Token ${{ secrets.DT_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "eventType": "ERROR_EVENT",
              "title": "Build Failed",
              "entitySelector": "type(APPLICATION)",
              "properties": {
                "dt.event.source": "GitHub Actions",
                "dt.event.pipeline.name": "build-easytrade",
                "dt.event.pipeline.stage": "build",
                "dt.event.pipeline.status": "FAILED",
                "commit": "'$GITHUB_SHA'",
                "branch": "'$GITHUB_REF_NAME'",
                "repository": "'$GITHUB_REPOSITORY'"
              }
            }'


